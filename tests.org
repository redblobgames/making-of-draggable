#+title: Test page: draggable handles
#+date: <2023-01-04>
#+nocomments: t

*My goal*: write the simplest event handlers for dragging an object around inside a =<svg>= or =<canvas>= or =<div>=. It should handle both mouse and touch events. It should handle as many edge cases as reasonably possible.

Things to try on Desktop: 

- Try holding down and dragging outside the diagram, and coming back. Or let go outside the diagram.
- Try holding down and dragging outside the window, then let go of the mouse.
- Try holding down then Alt+Tab.
- Try scrolling while dragging.

Things to try on Mobile:

- Try holding down on the drag circle then move up / down; it won't scroll
- Try holding down elsewhere on the diagram and move up / down; it should scroll
- Try holding down and then try to rescale with pinching (ios & android: won't pinch if you hold down on draggable object)
- Try: holding down and then rotate (ios: will rotate the page but dragging still works; android: won't rotate until you let go)

TODO: nested dragging, maybe a circle inside a circle. Need stopPropagation for this?

• what if you select all text on the page and then try to drag a circle in my diagram? it turns out drag text outside of a browser is an operation, and this interferes with the dragging of the circle
• what if you have two mice plugged in and then you hold down the button on one, start dragging, then click on the other?
• what if you use the ipad as a second screen, and use the stylus on the ipad as a mouse on your mac?
• and vice versa, what if you use the mouse on the mac on the ipad?
• what if you press harder on the mac touchpad? do you get force pressure events?
• what if you have a draggable object inside another draggable object?
• what if you long press on a circle that also has text inside it?
• what if you start the drag by using your finger, but then you use another finger to "pinch zoom"?
• what if you use two separate fingers to drag two separate objects?
• what if you use two separate fingers to drag one object?
• what if you start a drag on a phone, and then rotate the phone while you're still dragging?
• what if you start a drag on a desktop and then use Alt+Tab to switch to another window?
• what if you start a drag and then put the computer to sleep in the middle of the drag?
• what if while you're dragging, you middle click which starts a scroll operation? 
•what if you unplug the mouse during a drag?
- what if you press left button, then ctrl, then release left button? on mac/firefox this gives pointerdown.left pointerup.right; on mac/chrome, mac/safari, and windows/* and linux/* it gives pointerdown.left pointerup.left

* Test: SVG single element
:PROPERTIES:
:CUSTOM_ID: test-2a-svg-single-element
:END:

#+begin_export html
<figure class="w-full">
  <svg viewBox="-330 -50 660 100">
    <rect x="-330" y="-50" width="100%" height="100%" fill="url(#pattern-dots)" />
    <circle class="draggable" stroke="black" stroke-width="0.5" r="30" />
  </svg>
  <figcaption>Draggable circle</figcaption>
  <button>Reset</button>
</figure>
#+end_export

- Basic tests work
- On desktop, scrolling while dragging doesn't drag until you move your mouse a tiny amount. This could be solved either with a timer or by catching the scroll event. Low priority for me.

* Test: SVG nested element with text
:PROPERTIES:
:CUSTOM_ID: test-2b-svg-nested-element-with-text
:END:

{ aren't there three versions of this? one where I use target for pointer capture, one with currentTarget, and one that uses user-select none?  maybe checkboxes }

#+begin_export html
<figure class="w-full">
  <svg viewBox="-330 -50 660 100">
    <rect x="-330" y="-50" width="100%" height="100%" fill="url(#pattern-dots)" />
    <g class="draggable">
      <circle stroke="black" stroke-width="0.5" r="30" />
      <g font-size="16" text-anchor="middle" fill="white">
        <text dy="0.0em">Drag</text>
        <text dy="1.0em">me</text>
      </g>
    </g>
  </svg>
  <figcaption>Draggable circle + text</figcaption>
  <button>Reset</button>
</figure>
#+end_export

- I use pointer capture on =currentTarget= not =target=. 
- While dragging, I set CSS ~user-select: none~. This prevents selecting the text by dragging or double clicking (desktop) or long press (mobile). But I don't want this /all/ the time. When not dragging, I want the text to be selectable.
- On desktop, if you select the text of the page and then try to drag it, it will let you drag that text outside the browser. But if you also try to drag this circle the two drag handlers will intefere. Use ~preventDefault()~ on the =dragstart= event to fix this.

* Test: Canvas drawing
:PROPERTIES:
:CUSTOM_ID: test-2c-canvas-drag-to-draw
:END:

#+begin_export html
<figure class="w-full">
  <canvas width="660" height="100" style="cursor:crosshair"/>
  <figcaption>Drag to draw on the canvas</figcaption>
</figure>
#+end_export

* Test: Canvas dragging
:PROPERTIES:
:CUSTOM_ID: test-2d-canvas-drag-a-handle
:END:

#+begin_export html
<figure class="w-full">
  <canvas width="1000" height="150" />
  <figcaption>Drag the circle to move it</figcaption>
  <button>Reset</button>
</figure>
#+end_export

- If I put a second finger on the diagram it jumps to the second finger's position. This is because the /same/ is getting the =pointermove= event for the second finger, whereas in the other demos a /different/ element gets the events for the second finger. To fix this, I need to use the =.pointerId= field to make sure the =pointermove= event I got is for the same finger that started the drag.

* Test: HTML div absolute positioned
:PROPERTIES:
:CUSTOM_ID: test-2e-html-div-absolute-positioned
:END:

#+begin_export html
<figure class="w-full">
  <div class="diagram" style="position:relative;width:100%;height:100px">
    <div class="draggable" style="position:absolute;width:5em;height:1.5em">Drag me</div>
  </div>
  <figcaption>Drag the box to move it</figcaption>
  <button>Reset</button>
</figure>
#+end_export

- It is possible to place the box outside the container by placing it on the right, then shrinking the browser size. I'm going to leave this up to the application and not try to solve it generically.

* Test: HTML div css transform
:PROPERTIES:
:CUSTOM_ID: test-2f-html-div-css-transform
:END:

#+begin_export html
<figure class="w-full">
  <div class="diagram" style="position:relative;width:100%;height:100px">
    <div class="draggable" style="transform:translate(0px,0px);width:5em;height:1.5em">Drag me</div>
  </div>
  <figcaption>Drag the box to move it</figcaption>
  <button>Reset</button>
</figure>
#+end_export

* Notes
:PROPERTIES:
:CUSTOM_ID: notes
:END:

/None/ of these handle CSS transforms on the parent elements. This is an unsolved issue, not only for me, but also other libraries like d3.js. See https://github.com/d3/d3-selection/issues/67  and https://bugzilla.mozilla.org/show_bug.cgi?id=1610093 . There's probably /something/ we can do using =window.getComputedStyle(element)= but this is a low priority for me, as I almost never use css transforms above a draggable element.


#+begin_export html
<style>
  svg, canvas, div.diagram { background: #eee; box-shadow: 0 1px 3px 1px rgba(0,0,0,0.3); width: 100%; }

  .draggable { cursor: grab; }
  .dragging { cursor: grabbing; user-select: none; }

  circle.draggable, .draggable circle { fill: hsl(0 50% 50%); }
  circle.draggable.dragging, .dragging circle { fill: hsl(200 50% 50%); }
  div.draggable { background: hsl(0 50% 50%); color: white; }
  div.draggable.dragging { background: hsl(200 50% 50%); }

</style>

<x:footer>
  <svg width="0" height="0">
    <defs>
      <pattern id="pattern-dots" width="10" height="10" patternUnits="userSpaceOnUse">
        <circle cx="5" cy="5" fill="hsl(0 10% 80%)" r="1" />
      </pattern>
    </defs>
  </svg>
  <script src="tests.js"></script>
</x:footer>
#+end_export
